// <auto-generated />
using System;
using Com.Danliris.Service.Inventory.Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Com.Danliris.Service.Inventory.Lib.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20210401074941_AddField_Consignment_GarmentLeftoverExpenditureFinishedGood")]
    partial class AddField_Consignment_GarmentLeftoverExpenditureFinishedGood
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FPReturnInvToPurchasingModel.FPReturnInvToPurchasing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("FPReturnInvToPurchasings");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FPReturnInvToPurchasingModel.FPReturnInvToPurchasingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<string>("FPRegradingResultDocsCode")
                        .HasMaxLength(255);

                    b.Property<int>("FPRegradingResultDocsId");

                    b.Property<int>("FPReturnInvToPurchasingId");

                    b.Property<double>("Length");

                    b.Property<double>("NecessaryLength");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<double>("Quantity");

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FPReturnInvToPurchasingId");

                    b.ToTable("FPReturnInvToPurchasingDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpRegradingResultDocs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<bool>("IsReturn");

                    b.Property<bool>("IsReturnedToPurchasing");

                    b.Property<string>("MachineCode");

                    b.Property<string>("MachineId");

                    b.Property<string>("MachineName");

                    b.Property<string>("NoBon")
                        .HasMaxLength(255);

                    b.Property<string>("NoBonId")
                        .HasMaxLength(128);

                    b.Property<string>("Operator");

                    b.Property<string>("OriginalGrade");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("Remark")
                        .HasMaxLength(255);

                    b.Property<string>("Shift");

                    b.Property<string>("SupplierCode");

                    b.Property<string>("SupplierId");

                    b.Property<string>("SupplierName");

                    b.Property<double>("TotalLength");

                    b.Property<string>("UnitName");

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("fpRegradingResultDocs");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpRegradingResultDocsDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<int>("FpReturProInvDocsId");

                    b.Property<string>("Grade");

                    b.Property<double>("Length");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<double>("Quantity");

                    b.Property<string>("Remark");

                    b.Property<string>("Retur");

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FpReturProInvDocsId");

                    b.ToTable("fpRegradingResultDocsDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpReturnFromBuyers.FpReturnFromBuyerDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("FpReturnFromBuyerId");

                    b.Property<int>("ProductionOrderId");

                    b.Property<string>("ProductionOrderNo")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FpReturnFromBuyerId");

                    b.ToTable("FpReturnFromBuyerDetailModel");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpReturnFromBuyers.FpReturnFromBuyerItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ColorWay")
                        .HasMaxLength(255);

                    b.Property<string>("DesignCode")
                        .HasMaxLength(255);

                    b.Property<string>("DesignNumber")
                        .HasMaxLength(255);

                    b.Property<int>("FpReturnFromBuyerDetailId");

                    b.Property<double>("Length");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<string>("Remark")
                        .HasMaxLength(4000);

                    b.Property<double>("ReturnQuantity");

                    b.Property<string>("UOM")
                        .HasMaxLength(255);

                    b.Property<int>("UOMId");

                    b.Property<double>("Weight");

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FpReturnFromBuyerDetailId");

                    b.ToTable("FpReturnFromBuyerItemModel");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpReturnFromBuyers.FpReturnFromBuyerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CodeProduct")
                        .HasMaxLength(255);

                    b.Property<string>("CoverLetter")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("Destination")
                        .HasMaxLength(255);

                    b.Property<bool>("IsVoid");

                    b.Property<string>("SpkNo")
                        .HasMaxLength(255);

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<int>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("FpReturnFromBuyerModel");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureAval.GarmentLeftoverWarehouseExpenditureAval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("AvalExpenditureNo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("AvalType");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasMaxLength(3000);

                    b.Property<DateTimeOffset>("ExpenditureDate");

                    b.Property<string>("ExpenditureTo")
                        .HasMaxLength(50);

                    b.Property<string>("OtherDescription")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("AvalExpenditureNo")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseExpenditureAvals");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureAval.GarmentLeftoverWarehouseExpenditureAvalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AvalExpenditureId");

                    b.Property<int>("AvalReceiptId");

                    b.Property<string>("AvalReceiptNo")
                        .HasMaxLength(25);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(25);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100);

                    b.Property<double>("Quantity");

                    b.Property<int>("StockId");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(25);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(100);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("AvalExpenditureId");

                    b.HasIndex("AvalReceiptId", "StockId")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseExpenditureAvalItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFabric.GarmentLeftoverWarehouseExpenditureFabric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100);

                    b.Property<string>("EtcRemark")
                        .HasMaxLength(500);

                    b.Property<DateTimeOffset>("ExpenditureDate");

                    b.Property<string>("ExpenditureDestination");

                    b.Property<string>("ExpenditureNo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Remark")
                        .HasMaxLength(3000);

                    b.Property<string>("UnitExpenditureCode")
                        .HasMaxLength(25);

                    b.Property<long>("UnitExpenditureId");

                    b.Property<string>("UnitExpenditureName")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("ExpenditureNo")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseExpenditureFabrics");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFabric.GarmentLeftoverWarehouseExpenditureFabricItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("ExpenditureId");

                    b.Property<string>("PONo")
                        .HasMaxLength(25);

                    b.Property<double>("Quantity");

                    b.Property<int>("StockId");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(25);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(100);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("ExpenditureId", "StockId")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseExpenditureFabricItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFinishedGood.GarmentLeftoverWarehouseExpenditureFinishedGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(20);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(100);

                    b.Property<bool>("Consignment");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<DateTimeOffset>("ExpenditureDate");

                    b.Property<string>("ExpenditureTo")
                        .HasMaxLength(50);

                    b.Property<string>("FinishedGoodExpenditureNo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("OtherDescription")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FinishedGoodExpenditureNo")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseExpenditureFinishedGoods");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFinishedGood.GarmentLeftoverWarehouseExpenditureFinishedGoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("ExpenditureQuantity");

                    b.Property<int>("FinishedGoodExpenditureId");

                    b.Property<string>("RONo")
                        .HasMaxLength(50);

                    b.Property<int>("StockId");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(20);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FinishedGoodExpenditureId");

                    b.ToTable("GarmentLeftoverWarehouseExpenditureFinishedGoodItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptAvalModels.GarmentLeftoverWarehouseReceiptAval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("AvalReceiptNo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("AvalType")
                        .HasMaxLength(25);

                    b.Property<bool>("IsUsed");

                    b.Property<DateTimeOffset>("ReceiptDate");

                    b.Property<string>("Remark")
                        .HasMaxLength(3000);

                    b.Property<double>("TotalAval");

                    b.Property<string>("UnitFromCode")
                        .HasMaxLength(25);

                    b.Property<long>("UnitFromId");

                    b.Property<string>("UnitFromName")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("AvalReceiptNo")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseReceiptAvals");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptAvalModels.GarmentLeftoverWarehouseReceiptAvalItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AvalReceiptId");

                    b.Property<Guid>("GarmentAvalProductId");

                    b.Property<Guid>("GarmentAvalProductItemId");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(25);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100);

                    b.Property<string>("ProductRemark")
                        .HasMaxLength(3000);

                    b.Property<double>("Quantity");

                    b.Property<string>("RONo")
                        .HasMaxLength(25);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("AvalReceiptId");

                    b.ToTable("GarmentLeftoverWarehouseReceiptAvalItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFabricModels.GarmentLeftoverWarehouseReceiptFabric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ExpenditureDate");

                    b.Property<DateTimeOffset>("ReceiptDate");

                    b.Property<string>("ReceiptNoteNo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Remark")
                        .HasMaxLength(3000);

                    b.Property<string>("StorageFromCode")
                        .HasMaxLength(25);

                    b.Property<long>("StorageFromId");

                    b.Property<string>("StorageFromName")
                        .HasMaxLength(100);

                    b.Property<long>("UENId");

                    b.Property<string>("UENNo")
                        .HasMaxLength(25);

                    b.Property<string>("UnitFromCode")
                        .HasMaxLength(25);

                    b.Property<long>("UnitFromId");

                    b.Property<string>("UnitFromName")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptNoteNo")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseReceiptFabrics");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFabricModels.GarmentLeftoverWarehouseReceiptFabricItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("FabricRemark")
                        .HasMaxLength(3000);

                    b.Property<int>("GarmentLeftoverWarehouseReceiptFabricId");

                    b.Property<string>("POSerialNumber")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(25);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100);

                    b.Property<string>("ProductRemark")
                        .HasMaxLength(3000);

                    b.Property<double>("Quantity");

                    b.Property<long>("UENItemId");

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("GarmentLeftoverWarehouseReceiptFabricId");

                    b.ToTable("GarmentLeftoverWarehouseReceiptFabricItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFinishedGoodModels.GarmentLeftoverWarehouseReceiptFinishedGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Article");

                    b.Property<string>("BuyerCode");

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName");

                    b.Property<double>("Carton");

                    b.Property<string>("ComodityCode");

                    b.Property<long>("ComodityId");

                    b.Property<string>("ComodityName");

                    b.Property<string>("ContractNo");

                    b.Property<string>("Description")
                        .HasMaxLength(3000);

                    b.Property<DateTimeOffset>("ExpenditureDate");

                    b.Property<string>("ExpenditureDesc");

                    b.Property<Guid>("ExpenditureGoodId");

                    b.Property<string>("ExpenditureGoodNo")
                        .HasMaxLength(25);

                    b.Property<string>("FinishedGoodReceiptNo")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Invoice");

                    b.Property<string>("RONo");

                    b.Property<DateTimeOffset>("ReceiptDate");

                    b.Property<string>("UnitFromCode")
                        .HasMaxLength(25);

                    b.Property<long>("UnitFromId");

                    b.Property<string>("UnitFromName")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FinishedGoodReceiptNo")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseReceiptFinishedGoods");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFinishedGoodModels.GarmentLeftoverWarehouseReceiptFinishedGoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<Guid>("ExpenditureGoodItemId");

                    b.Property<int>("FinishedGoodReceiptId");

                    b.Property<double>("Quantity");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000);

                    b.Property<long>("SizeId");

                    b.Property<string>("SizeName")
                        .HasMaxLength(50);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("FinishedGoodReceiptId");

                    b.ToTable("GarmentLeftoverWarehouseReceiptFinishedGoodItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.Stock.GarmentLeftoverWarehouseStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("PONo")
                        .HasMaxLength(25);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(25);

                    b.Property<long?>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100);

                    b.Property<double>("Quantity");

                    b.Property<string>("RONo")
                        .HasMaxLength(25);

                    b.Property<string>("ReferenceType")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(25);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(100);

                    b.Property<long?>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceType", "UnitId", "PONo", "RONo", "ProductId", "UomId")
                        .IsUnique()
                        .HasFilter("[_IsDeleted]=(0)");

                    b.ToTable("GarmentLeftoverWarehouseStocks");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.Stock.GarmentLeftoverWarehouseStockHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("AfterQuantity");

                    b.Property<double>("BeforeQuantity");

                    b.Property<double>("Quantity");

                    b.Property<int>("StockId");

                    b.Property<int>("StockReferenceId");

                    b.Property<int>("StockReferenceItemId");

                    b.Property<string>("StockReferenceNo");

                    b.Property<string>("StockType")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("GarmentLeftoverWarehouseStockHistories");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.InventoryModel.InventoryDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<int>("StorageId")
                        .HasMaxLength(255);

                    b.Property<string>("StorageName")
                        .HasMaxLength(255);

                    b.Property<string>("Type");

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("InventoryDocuments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.InventoryModel.InventoryDocumentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("InventoryDocumentId");

                    b.Property<int>("MongoIndexItem");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(1000);

                    b.Property<int>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("Quantity");

                    b.Property<double>("StockPlanning");

                    b.Property<int>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("InventoryDocumentId");

                    b.ToTable("InventoryDocumentItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.InventoryModel.InventoryMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("After");

                    b.Property<double>("Before");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(1000);

                    b.Property<int>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<double>("Quantity");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<double>("StockPlanning");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<int>("StorageId")
                        .HasMaxLength(255);

                    b.Property<string>("StorageName")
                        .HasMaxLength(255);

                    b.Property<string>("Type");

                    b.Property<string>("Uid")
                        .HasMaxLength(255);

                    b.Property<int>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("InventoryMovements");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.InventoryModel.InventorySummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(1000);

                    b.Property<int>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<double>("Quantity");

                    b.Property<double>("StockPlanning");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<int>("StorageId")
                        .HasMaxLength(255);

                    b.Property<string>("StorageName")
                        .HasMaxLength(255);

                    b.Property<string>("Uid")
                        .HasMaxLength(255);

                    b.Property<int>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("InventorySummaries");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialDistributionNoteModel.MaterialDistributionNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<bool>("IsApproved");

                    b.Property<bool>("IsDisposition");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("MaterialDistributionNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialDistributionNoteModel.MaterialDistributionNoteDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("DistributedLength");

                    b.Property<string>("Grade")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDisposition");

                    b.Property<int>("MaterialDistributionNoteItemId");

                    b.Property<double>("MaterialRequestNoteItemLength");

                    b.Property<int>("MaterialsRequestNoteItemId");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<string>("ProductionOrderId");

                    b.Property<bool>("ProductionOrderIsCompleted");

                    b.Property<string>("ProductionOrderNo")
                        .HasMaxLength(255);

                    b.Property<double>("Quantity");

                    b.Property<double>("ReceivedLength");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("MaterialDistributionNoteItemId");

                    b.ToTable("MaterialDistributionNoteDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialDistributionNoteModel.MaterialDistributionNoteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("MaterialDistributionNoteId");

                    b.Property<string>("MaterialRequestNoteCode")
                        .HasMaxLength(100);

                    b.Property<DateTime>("MaterialRequestNoteCreatedDateUtc");

                    b.Property<int>("MaterialRequestNoteId");

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("MaterialDistributionNoteId");

                    b.ToTable("MaterialDistributionNoteItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialsRequestNoteModel.MaterialsRequestNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDistributed");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000);

                    b.Property<string>("RequestType")
                        .HasMaxLength(100);

                    b.Property<string>("Type");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(100);

                    b.Property<string>("UnitId")
                        .HasMaxLength(100);

                    b.Property<string>("UnitName")
                        .HasMaxLength(100);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("MaterialsRequestNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialsRequestNoteModel.MaterialsRequestNote_Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<double>("DistributedLength");

                    b.Property<string>("Grade")
                        .HasMaxLength(500);

                    b.Property<double>("Length");

                    b.Property<int>("MaterialsRequestNoteId");

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("OrderTypeCode")
                        .HasMaxLength(100);

                    b.Property<string>("OrderTypeId")
                        .HasMaxLength(100);

                    b.Property<string>("OrderTypeName")
                        .HasMaxLength(100);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(100);

                    b.Property<string>("ProductId")
                        .HasMaxLength(100);

                    b.Property<string>("ProductName")
                        .HasMaxLength(100);

                    b.Property<string>("ProductionOrderId")
                        .HasMaxLength(100);

                    b.Property<bool>("ProductionOrderIsCompleted");

                    b.Property<string>("ProductionOrderNo")
                        .HasMaxLength(100);

                    b.Property<string>("Remark");

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("MaterialsRequestNoteId");

                    b.ToTable("MaterialsRequestNote_Items");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.StockTransferNoteModel.StockTransferNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<bool>("IsApproved");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(255);

                    b.Property<string>("SourceStorageCode")
                        .HasMaxLength(255);

                    b.Property<string>("SourceStorageId")
                        .HasMaxLength(255);

                    b.Property<string>("SourceStorageName")
                        .HasMaxLength(255);

                    b.Property<string>("TargetStorageCode")
                        .HasMaxLength(255);

                    b.Property<string>("TargetStorageId")
                        .HasMaxLength(255);

                    b.Property<string>("TargetStorageName")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("StockTransferNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.StockTransferNoteModel.StockTransferNote_Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<double>("StockQuantity");

                    b.Property<int>("StockTransferNoteId");

                    b.Property<int?>("StockTransferNote_ItemId");

                    b.Property<double>("TransferedQuantity");

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_CreatedUtc");

                    b.Property<string>("_DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_DeletedUtc");

                    b.Property<bool>("_IsDeleted");

                    b.Property<string>("_LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("_LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("_LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("StockTransferNoteId");

                    b.HasIndex("StockTransferNote_ItemId");

                    b.ToTable("StockTransferNoteItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FPReturnInvToPurchasingModel.FPReturnInvToPurchasingDetail", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.FPReturnInvToPurchasingModel.FPReturnInvToPurchasing", "FPReturnInvToPurchasing")
                        .WithMany("FPReturnInvToPurchasingDetails")
                        .HasForeignKey("FPReturnInvToPurchasingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpRegradingResultDocsDetails", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.FpRegradingResultDocs", "FpReturProInvDocs")
                        .WithMany("Details")
                        .HasForeignKey("FpReturProInvDocsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpReturnFromBuyers.FpReturnFromBuyerDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.FpReturnFromBuyers.FpReturnFromBuyerModel", "FpReturnFromBuyer")
                        .WithMany("Details")
                        .HasForeignKey("FpReturnFromBuyerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.FpReturnFromBuyers.FpReturnFromBuyerItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.FpReturnFromBuyers.FpReturnFromBuyerDetailModel", "FpReturnFromBuyerDetail")
                        .WithMany("Items")
                        .HasForeignKey("FpReturnFromBuyerDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureAval.GarmentLeftoverWarehouseExpenditureAvalItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureAval.GarmentLeftoverWarehouseExpenditureAval", "GarmentLeftoverWarehouseExpenditureAval")
                        .WithMany("Items")
                        .HasForeignKey("AvalExpenditureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFabric.GarmentLeftoverWarehouseExpenditureFabricItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFabric.GarmentLeftoverWarehouseExpenditureFabric", "GarmentLeftoverWarehouseExpenditureFabric")
                        .WithMany("Items")
                        .HasForeignKey("ExpenditureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFinishedGood.GarmentLeftoverWarehouseExpenditureFinishedGoodItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.ExpenditureFinishedGood.GarmentLeftoverWarehouseExpenditureFinishedGood", "GarmentLeftoverWarehouseExpenditureFinishedGood")
                        .WithMany("Items")
                        .HasForeignKey("FinishedGoodExpenditureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptAvalModels.GarmentLeftoverWarehouseReceiptAvalItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptAvalModels.GarmentLeftoverWarehouseReceiptAval", "GarmentLeftoverWarehouseReceiptAval")
                        .WithMany("Items")
                        .HasForeignKey("AvalReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFabricModels.GarmentLeftoverWarehouseReceiptFabricItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFabricModels.GarmentLeftoverWarehouseReceiptFabric", "GarmentLeftoverWarehouseReceiptFabric")
                        .WithMany("Items")
                        .HasForeignKey("GarmentLeftoverWarehouseReceiptFabricId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFinishedGoodModels.GarmentLeftoverWarehouseReceiptFinishedGoodItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.GarmentLeftoverWarehouseReceiptFinishedGoodModels.GarmentLeftoverWarehouseReceiptFinishedGood", "GarmentLeftoverWarehouseReceiptFinishedGood")
                        .WithMany("Items")
                        .HasForeignKey("FinishedGoodReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.Stock.GarmentLeftoverWarehouseStockHistory", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.GarmentLeftoverWarehouse.Stock.GarmentLeftoverWarehouseStock", "Stock")
                        .WithMany("Histories")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.InventoryModel.InventoryDocumentItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.InventoryModel.InventoryDocument", "InventoryDocument")
                        .WithMany("Items")
                        .HasForeignKey("InventoryDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialDistributionNoteModel.MaterialDistributionNoteDetail", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.MaterialDistributionNoteModel.MaterialDistributionNoteItem", "MaterialDistributionNoteItem")
                        .WithMany("MaterialDistributionNoteDetails")
                        .HasForeignKey("MaterialDistributionNoteItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialDistributionNoteModel.MaterialDistributionNoteItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.MaterialDistributionNoteModel.MaterialDistributionNote", "MaterialDistributionNote")
                        .WithMany("MaterialDistributionNoteItems")
                        .HasForeignKey("MaterialDistributionNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.MaterialsRequestNoteModel.MaterialsRequestNote_Item", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.MaterialsRequestNoteModel.MaterialsRequestNote", "MaterialsRequestNote")
                        .WithMany("MaterialsRequestNote_Items")
                        .HasForeignKey("MaterialsRequestNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Inventory.Lib.Models.StockTransferNoteModel.StockTransferNote_Item", b =>
                {
                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.StockTransferNoteModel.StockTransferNote", "StockTransferNote")
                        .WithMany("StockTransferNoteItems")
                        .HasForeignKey("StockTransferNoteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Com.Danliris.Service.Inventory.Lib.Models.StockTransferNoteModel.StockTransferNote_Item")
                        .WithMany("MaterialDistributionNoteDetails")
                        .HasForeignKey("StockTransferNote_ItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
